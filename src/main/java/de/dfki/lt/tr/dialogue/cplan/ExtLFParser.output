Terminals unused in grammar

   VAR
   GVAR
   COMPARISON
   ARROW


Grammar

    0 $accept: start $end

    1 start: lf

    2 lf: '@' ID ':' ID '(' lfconj ')'
    3   | '@' ID '(' lfdisj ')'
    4   | '(' lfdisj ')'

    5 lfdisj: lfconj '|' lfdisj
    6       | lfconj

    7 lfconj: lfterm '^' lfconj
    8       | lfterm

    9 lfterm: '<' ID '>' '(' lfconj ')'
   10       | '<' ID '>' ID
   11       | '<' ID '>' STRING
   12       | '<' ID '>' ID ':' ID
   13       | '<' ID '>' ID ':'
   14       | ID ':' ID
   15       | ID ':'
   16       | ':' ID
   17       | ID
   18       | '(' lfdisj ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 3 4 9 18
')' (41) 2 3 4 9 18
':' (58) 2 12 13 14 15 16
'<' (60) 9 10 11 12 13
'>' (62) 9 10 11 12 13
'@' (64) 2 3
'^' (94) 7
'|' (124) 5
error (256)
ID (258) 2 3 9 10 11 12 13 14 15 16 17
VAR (259)
GVAR (260)
COMPARISON (261)
ARROW (262)
STRING (263) 11


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
start (18)
    on left: 1, on right: 0
lf (19)
    on left: 2 3 4, on right: 1
lfdisj (20)
    on left: 5 6, on right: 3 4 5 18
lfconj (21)
    on left: 7 8, on right: 2 5 6 7 9
lfterm (22)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 7 8


state 0

    0 $accept: . start $end

    '@'  shift, and go to state 1
    '('  shift, and go to state 2

    start  go to state 3
    lf     go to state 4


state 1

    2 lf: '@' . ID ':' ID '(' lfconj ')'
    3   | '@' . ID '(' lfdisj ')'

    ID  shift, and go to state 5


state 2

    4 lf: '(' . lfdisj ')'

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfdisj  go to state 10
    lfconj  go to state 11
    lfterm  go to state 12


state 3

    0 $accept: start . $end

    $end  shift, and go to state 13


state 4

    1 start: lf .

    $default  reduce using rule 1 (start)


state 5

    2 lf: '@' ID . ':' ID '(' lfconj ')'
    3   | '@' ID . '(' lfdisj ')'

    ':'  shift, and go to state 14
    '('  shift, and go to state 15


state 6

   14 lfterm: ID . ':' ID
   15       | ID . ':'
   17       | ID .

    ':'  shift, and go to state 16

    $default  reduce using rule 17 (lfterm)


state 7

   16 lfterm: ':' . ID

    ID  shift, and go to state 17


state 8

   18 lfterm: '(' . lfdisj ')'

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfdisj  go to state 18
    lfconj  go to state 11
    lfterm  go to state 12


state 9

    9 lfterm: '<' . ID '>' '(' lfconj ')'
   10       | '<' . ID '>' ID
   11       | '<' . ID '>' STRING
   12       | '<' . ID '>' ID ':' ID
   13       | '<' . ID '>' ID ':'

    ID  shift, and go to state 19


state 10

    4 lf: '(' lfdisj . ')'

    ')'  shift, and go to state 20


state 11

    5 lfdisj: lfconj . '|' lfdisj
    6       | lfconj .

    '|'  shift, and go to state 21

    $default  reduce using rule 6 (lfdisj)


state 12

    7 lfconj: lfterm . '^' lfconj
    8       | lfterm .

    '^'  shift, and go to state 22

    $default  reduce using rule 8 (lfconj)


state 13

    0 $accept: start $end .

    $default  accept


state 14

    2 lf: '@' ID ':' . ID '(' lfconj ')'

    ID  shift, and go to state 23


state 15

    3 lf: '@' ID '(' . lfdisj ')'

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfdisj  go to state 24
    lfconj  go to state 11
    lfterm  go to state 12


state 16

   14 lfterm: ID ':' . ID
   15       | ID ':' .

    ID  shift, and go to state 25

    $default  reduce using rule 15 (lfterm)


state 17

   16 lfterm: ':' ID .

    $default  reduce using rule 16 (lfterm)


state 18

   18 lfterm: '(' lfdisj . ')'

    ')'  shift, and go to state 26


state 19

    9 lfterm: '<' ID . '>' '(' lfconj ')'
   10       | '<' ID . '>' ID
   11       | '<' ID . '>' STRING
   12       | '<' ID . '>' ID ':' ID
   13       | '<' ID . '>' ID ':'

    '>'  shift, and go to state 27


state 20

    4 lf: '(' lfdisj ')' .

    $default  reduce using rule 4 (lf)


state 21

    5 lfdisj: lfconj '|' . lfdisj

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfdisj  go to state 28
    lfconj  go to state 11
    lfterm  go to state 12


state 22

    7 lfconj: lfterm '^' . lfconj

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfconj  go to state 29
    lfterm  go to state 12


state 23

    2 lf: '@' ID ':' ID . '(' lfconj ')'

    '('  shift, and go to state 30


state 24

    3 lf: '@' ID '(' lfdisj . ')'

    ')'  shift, and go to state 31


state 25

   14 lfterm: ID ':' ID .

    $default  reduce using rule 14 (lfterm)


state 26

   18 lfterm: '(' lfdisj ')' .

    $default  reduce using rule 18 (lfterm)


state 27

    9 lfterm: '<' ID '>' . '(' lfconj ')'
   10       | '<' ID '>' . ID
   11       | '<' ID '>' . STRING
   12       | '<' ID '>' . ID ':' ID
   13       | '<' ID '>' . ID ':'

    ID      shift, and go to state 32
    STRING  shift, and go to state 33
    '('     shift, and go to state 34


state 28

    5 lfdisj: lfconj '|' lfdisj .

    $default  reduce using rule 5 (lfdisj)


state 29

    7 lfconj: lfterm '^' lfconj .

    $default  reduce using rule 7 (lfconj)


state 30

    2 lf: '@' ID ':' ID '(' . lfconj ')'

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfconj  go to state 35
    lfterm  go to state 12


state 31

    3 lf: '@' ID '(' lfdisj ')' .

    $default  reduce using rule 3 (lf)


state 32

   10 lfterm: '<' ID '>' ID .
   12       | '<' ID '>' ID . ':' ID
   13       | '<' ID '>' ID . ':'

    ':'  shift, and go to state 36

    $default  reduce using rule 10 (lfterm)


state 33

   11 lfterm: '<' ID '>' STRING .

    $default  reduce using rule 11 (lfterm)


state 34

    9 lfterm: '<' ID '>' '(' . lfconj ')'

    ID   shift, and go to state 6
    ':'  shift, and go to state 7
    '('  shift, and go to state 8
    '<'  shift, and go to state 9

    lfconj  go to state 37
    lfterm  go to state 12


state 35

    2 lf: '@' ID ':' ID '(' lfconj . ')'

    ')'  shift, and go to state 38


state 36

   12 lfterm: '<' ID '>' ID ':' . ID
   13       | '<' ID '>' ID ':' .

    ID  shift, and go to state 39

    $default  reduce using rule 13 (lfterm)


state 37

    9 lfterm: '<' ID '>' '(' lfconj . ')'

    ')'  shift, and go to state 40


state 38

    2 lf: '@' ID ':' ID '(' lfconj ')' .

    $default  reduce using rule 2 (lf)


state 39

   12 lfterm: '<' ID '>' ID ':' ID .

    $default  reduce using rule 12 (lfterm)


state 40

    9 lfterm: '<' ID '>' '(' lfconj ')' .

    $default  reduce using rule 9 (lfterm)
